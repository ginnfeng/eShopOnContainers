<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>DependencyProperty</Title>
      <Shortcut>WPFDependencyProperty</Shortcut>
      <Description>
      </Description>
      <Author>Feng</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>UiProperty</ID>
          <ToolTip>
          </ToolTip>
          <Default>UiProperty</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>UiPropertyName</ID>
          <ToolTip>
          </ToolTip>
          <Default>PropertyName</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>PropertyType</ID>
          <ToolTip>
          </ToolTip>
          <Default>propertyType</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ElementClass</ID>
          <ToolTip>
          </ToolTip>
          <Default>ElementClass</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>OnPropertyChanged</ID>
          <ToolTip>
          </ToolTip>
          <Default>OnPropertyChanged</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>DefaultValue</ID>
          <ToolTip>
          </ToolTip>
          <Default>defaultValue</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[static $ElementClass$()
		{	
			$UiProperty$ = DependencyProperty.Register(
                      	"$UiPropertyName$", typeof($PropertyType$), typeof($ElementClass$),
                      	new FrameworkPropertyMetadata($DefaultValue$,
                      	new PropertyChangedCallback($OnPropertyChanged$)));
       	}

		public $PropertyType$ $UiPropertyName$
		{
			get { return ($PropertyType$)GetValue($UiProperty$); }
       		set { SetValue($UiProperty$, value); }
		}

		private static void $OnPropertyChanged$(DependencyObject sender,DependencyPropertyChangedEventArgs arg)
		{
			$ElementClass$ it=($ElementClass$)sender;
			if(arg.Property==$UiProperty$)
				it.$UiPropertyName$=($PropertyType$)arg.NewValue;
		}
        
		public static DependencyProperty $UiProperty$;
]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>